[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[tool.cibuildwheel]
manylinux-aarch64-image = "manylinux_2_28"
environment = { CMAKE_C_COMPILER_LAUNCHER="sccache", CMAKE_CXX_COMPILER_LAUNCHER="sccache", SCCACHE_GHA_ENABLED="true", CMAKE_GENERATOR="Ninja", CMAKE_BUILD_TYPE="Release"}
# Run the package tests using `pytest`
test-command = "python {package}/tests/client_test.py"
before-build = ["cmake --install build/ --prefix tdlib/ --strip || true"]

[tool.cibuildwheel.linux]
environment-pass = ["ACTIONS_CACHE_URL", "ACTIONS_RUNTIME_TOKEN"]
before-all = [
  "yum install -y gperf openssl-devel ninja-build || apk add --upgrade gperf openssl-dev || apt-get install gperf libssl-dev",
  "pip install sccache",
  "cmake -S tdlight -B build",
  "cmake --build build --target tdjson",
]
[tool.cibuildwheel.windows]
environment = { CMAKE_C_COMPILER_LAUNCHER="sccache", CMAKE_CXX_COMPILER_LAUNCHER="sccache", SCCACHE_GHA_ENABLED="true", CMAKE_BUILD_TYPE="Release", CMAKE_TOOLCHAIN_FILE="D:/a/tdlib-binary/tdlib-binary/vcpkg/scripts/buildsystems/vcpkg.cmake"}
before-all = [
  "vcpkg integrate install",
  "cmake -S tdlight -B build ",
  "cmake --build build --target tdjson",
]
[tool.cibuildwheel.macos]
before-all = [
  "cmake -S tdlight -B build",
  "cmake --build build --target tdjson",
]
